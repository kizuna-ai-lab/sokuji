---
description: 
globs: 
alwaysApply: false
---
---
description: Always write documentation and comments in English for international collaboration
globs: ["**/*.{js,jsx,ts,tsx,py,java,cpp,c,h,hpp,cs,php,rb,go,rs,swift,kt,scala,md,mdx,vue,svelte}"]
alwaysApply: false
---

# English Documentation and Comments Rule

Always write all documentation and comments in English, regardless of the developer's native language or project context.

**Applies to**:
- Code comments (single-line and multi-line)
- Function and method documentation
- Class and interface documentation
- README files and markdown documentation
- JSDoc/TSDoc comments
- API documentation
- Inline code explanations
- Git commit messages
- Variable and function naming (use English words)

**Examples**:

**✅ Correct**:
```javascript
/**
 * Calculates the total price including tax
 * @param {number} basePrice - The base price before tax
 * @param {number} taxRate - The tax rate as a decimal (e.g., 0.1 for 10%)
 * @returns {number} The total price including tax
 */
function calculateTotalPrice(basePrice, taxRate) {
  // Apply tax to the base price
  return basePrice * (1 + taxRate);
}
```

**❌ Incorrect**:
```javascript
/**
 * 计算包含税费的总价格
 * @param {number} basePrice - 税前基础价格
 * @param {number} taxRate - 税率（小数形式，如0.1表示10%）
 * @returns {number} 包含税费的总价格
 */
function calculateTotalPrice(basePrice, taxRate) {
  // 对基础价格应用税率
  return basePrice * (1 + taxRate);
}
```

**Benefits**:
- Ensures code maintainability for international teams
- Improves code readability for global contributors
- Maintains consistency across the codebase
- Facilitates knowledge sharing and collaboration

**Note**: This rule helps maintain professional standards and ensures the codebase is accessible to developers worldwide.
